CCS PCM C Compiler, Version 4.120, 11074               22-sep.-18 11:35

               Filename: C:\Users\Peter\Desktop\GitClass\P16F1823\E-SDigitales\ButtonStepMottor.lst

               ROM used: 80 words (4%)
                         Largest free fragment is 1968
               RAM used: 6 (5%) at main() level
                         22 (17%) worst case
               Stack:    2 locations

*
0000:  MOVLP  00
0001:  GOTO   02E
0002:  NOP
.................... #include <16f1823.h> 
.................... //////// Standard Header file for the PIC16F1823 device //////////////// 
.................... #device PIC16F1823 
.................... #list 
....................  
.................... #fuses PUT, NOWDT 
....................  
.................... #use delay(int = 32Mhz) 
0003:  MOVLW  20
0004:  MOVWF  05
0005:  MOVLW  06
0006:  MOVWF  04
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  0A
000B:  MOVWF  21
000C:  CLRF   20
000D:  DECFSZ 20,F
000E:  GOTO   00D
000F:  DECFSZ 21,F
0010:  GOTO   00C
0011:  MOVLW  5F
0012:  MOVWF  20
0013:  DECFSZ 20,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... //declaracion de registros c de acuerdo a la datasheet 
.................... void s(); 
.................... #Byte trisa = 0x08c 
.................... #byte trisc = 0x08e 
.................... #byte porta = 0x00c 
.................... #byte portc = 0x00e 
.................... void main() 
.................... { 
*
002E:  CLRF   05
002F:  CLRF   04
0030:  MOVLW  1F
0031:  ANDWF  03,F
0032:  MOVLW  F4
0033:  MOVLB  01
0034:  MOVWF  19
0035:  MOVLB  03
0036:  CLRF   0C
0037:  CLRF   0E
0038:  MOVLB  02
0039:  CLRF   12
003A:  CLRF   11
003B:  CLRF   14
003C:  CLRF   13
....................    trisa = 1;//todo el puerto A como salida 
003D:  MOVLW  01
003E:  MOVLB  01
003F:  MOVWF  0C
....................    trisc = 0;//todo el puerto C como entrada 
0040:  CLRF   0E
....................    portc=0; 
0041:  MOVLB  00
0042:  CLRF   0E
....................    int1 aux = 0; 
0043:  BCF    25.0
....................     
....................    while(true) 
....................    { 
....................       if(bit_test(porta,0)==1)//si el pin 0 esta encendido 
0044:  BTFSS  0C.0
0045:  GOTO   04B
....................       { 
....................          delay_ms(200); 
0046:  MOVLW  C8
0047:  MOVWF  26
0048:  CALL   003
....................          aux = !aux; 
0049:  MOVLW  01
004A:  XORWF  25,F
....................       } 
....................       if(aux==1) 
004B:  BTFSS  25.0
004C:  GOTO   04E
....................       { 
....................       s(); 
004D:  GOTO   018
....................       } 
....................    } 
004E:  GOTO   044
.................... } 
.................... void s() 
.................... { 
004F:  SLEEP
....................       portc = 0b001100; 
*
0018:  MOVLW  0C
0019:  MOVWF  0E
....................       delay_ms(100); 
001A:  MOVLW  64
001B:  MOVWF  26
001C:  CALL   003
....................       portc = 0b001001; 
001D:  MOVLW  09
001E:  MOVWF  0E
....................       delay_ms(100); 
001F:  MOVLW  64
0020:  MOVWF  26
0021:  CALL   003
....................       portc = 0b000011; 
0022:  MOVLW  03
0023:  MOVWF  0E
....................       delay_ms(100); 
0024:  MOVLW  64
0025:  MOVWF  26
0026:  CALL   003
....................       portc = 0b000110; 
0027:  MOVLW  06
0028:  MOVWF  0E
....................       delay_ms(100); 
0029:  MOVLW  64
002A:  MOVWF  26
002B:  CALL   003
.................... } 
002C:  MOVLP  00
002D:  GOTO   04E (RETURN)

Configuration Fuses:
   Word  1: 3FC4   INTRC_IO NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT NOCLKOUT IESO FCMEN
   Word  2: 1EFF   NOWRT PLL_SW STVREN BORV19 NODEBUG NOLVP
